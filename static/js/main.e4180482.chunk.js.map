{"version":3,"sources":["Tree.js","AsciiTree.js","index.js"],"names":["getNodeKey","_ref","treeIndex","renderTitle","node","setTreeData","treeData","path","react_default","a","createElement","value","title","onChange","event","target","changeNodeAtPath","newNode","_objectSpread","renderNodeButtons","rmButton","className","key","onClick","removeNodeAtPath","mkdirButton","addNodeUnderParent","parentKey","length","expandParent","isDirectory","touchButton","Tree","_ref2","index_esm","isVirtualized","theme","FileExplorerTheme","canNodeHaveChildren","generateNodeProps","_ref3","icons","expanded","buttons","concat","Object","toConsumableArray","renderTree","withEmoji","isCompact","renderChildTree","arguments","undefined","prefix","level","result","isRoot","forEach","leaf","index","hasNextSibling","indent","renderIndent","childPrefix","parentPrefix","parentHasNextSibling","spaceIndent","extraSpaceForChildOnly","renderChildPrefix","renderLeaf","children","AsciiTree","style","lineHeight","rootElement","document","getElementById","ReactDOM","render","_React$useState","React","useState","_React$useState2","slicedToArray","isEmoji","setIsEmoji","_React$useState3","_React$useState4","setIsCompact","_React$useState5","_React$useState6","src_Tree","type","checked","e","src_AsciiTree"],"mappings":"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","file":"static/js/main.e4180482.chunk.js","sourcesContent":["import React from 'react'\nimport SortableTree, {\n  changeNodeAtPath,\n  removeNodeAtPath,\n  addNodeUnderParent,\n} from 'react-sortable-tree'\nimport FileExplorerTheme from 'react-sortable-tree-theme-file-explorer'\n\nconst getNodeKey = ({ treeIndex }) => treeIndex\n\nconst renderTitle = (node, setTreeData, treeData, path) => {\n  return (\n    <input\n      value={node.title}\n      onChange={event => {\n        const title = event.target.value\n\n        setTreeData(\n          changeNodeAtPath({\n            treeData,\n            path,\n            getNodeKey,\n            newNode: { ...node, title },\n          }),\n        )\n      }}\n    />\n  )\n}\n\nconst renderNodeButtons = (node, setTreeData, treeData, path) => {\n  const rmButton = (\n    <button\n      className=\"tree-button\"\n      key=\"remove\"\n      onClick={() =>\n        setTreeData(\n          removeNodeAtPath({\n            treeData,\n            path,\n            getNodeKey,\n          }),\n        )\n      }\n    >\n      rm\n    </button>\n  )\n\n  const mkdirButton = (\n    <button\n      className=\"tree-button\"\n      onClick={() =>\n        setTreeData(\n          addNodeUnderParent({\n            treeData,\n            parentKey: path[path.length - 1],\n            expandParent: true,\n            getNodeKey,\n            newNode: {\n              title: '',\n              isDirectory: true,\n            },\n          }).treeData,\n        )\n      }\n    >\n      mkdir\n    </button>\n  )\n\n  const touchButton = (\n    <button\n      className=\"tree-button\"\n      onClick={() =>\n        setTreeData(\n          addNodeUnderParent({\n            treeData,\n            parentKey: path[path.length - 1],\n            expandParent: true,\n            getNodeKey,\n            newNode: {\n              title: '',\n            },\n          }).treeData,\n        )\n      }\n    >\n      touch\n    </button>\n  )\n\n  return node.isDirectory ? [mkdirButton, touchButton, rmButton] : [rmButton]\n}\n\nfunction Tree({ value: treeData, onChange: setTreeData }) {\n  return (\n    <div>\n      <SortableTree\n        isVirtualized={false}\n        treeData={treeData}\n        onChange={setTreeData}\n        theme={FileExplorerTheme}\n        canNodeHaveChildren={node => node.isDirectory}\n        generateNodeProps={({ node, path }) => ({\n          icons: node.isDirectory ? [node.expanded ? '📂' : '📁'] : ['📄'],\n          buttons: renderNodeButtons(node, setTreeData, treeData, path),\n          title: renderTitle(node, setTreeData, treeData, path),\n        })}\n      />\n      <button\n        className=\"root-button\"\n        onClick={() =>\n          setTreeData([\n            ...treeData,\n            {\n              title: '',\n              isDirectory: true,\n            },\n          ])\n        }\n      >\n        mkdir\n      </button>\n      <button\n        className=\"root-button\"\n        onClick={() =>\n          setTreeData([\n            ...treeData,\n            {\n              title: '',\n              isDirectory: false,\n            },\n          ])\n        }\n      >\n        touch\n      </button>\n    </div>\n  )\n}\n\nexport default Tree\n","import React from 'react'\n\nfunction renderIndent(isRoot, prefix, hasNextSibling, isCompact) {\n  let result = ''\n\n  if (!isRoot) {\n    result += prefix\n\n    if (hasNextSibling) {\n      result += isCompact ? '├─ ' : '├── '\n    } else {\n      result += isCompact ? '└─ ' : '└── '\n    }\n  }\n\n  return result\n}\n\nfunction renderTree(treeData, withEmoji, isCompact) {\n  return renderChildTree(treeData, undefined, undefined, withEmoji, isCompact)\n}\n\nfunction renderLeaf(leaf, withEmoji) {\n  if (withEmoji) {\n    return `${leaf.isDirectory ? '📂' : '📄'}${leaf.title}`\n  } else {\n    return leaf.title\n  }\n}\n\nfunction renderChildPrefix(\n  isRoot,\n  parentPrefix,\n  parentHasNextSibling,\n  isCompact,\n) {\n  const spaceIndent = isCompact ? '  ' : '   '\n  const childIndent = isRoot ? '' : spaceIndent\n  const extraSpaceForChildOnly = !isRoot && !parentHasNextSibling ? ' ' : ''\n\n  return (\n    parentPrefix +\n    (parentHasNextSibling ? '│' : extraSpaceForChildOnly) +\n    childIndent\n  )\n}\n\nfunction renderChildTree(\n  treeData = [],\n  prefix = '',\n  level = 0,\n  withEmoji,\n  isCompact,\n) {\n  let result = ''\n  const isRoot = level === 0\n\n  treeData.forEach((leaf, index) => {\n    const hasNextSibling = treeData.length > index + 1\n    const indent = renderIndent(isRoot, prefix, hasNextSibling, isCompact)\n    const childPrefix = renderChildPrefix(\n      isRoot,\n      prefix,\n      hasNextSibling,\n      isCompact,\n    )\n\n    result += indent + renderLeaf(leaf, withEmoji) + '\\n'\n    result += renderChildTree(\n      leaf.children,\n      childPrefix,\n      level + 1,\n      withEmoji,\n      isCompact,\n    )\n  })\n\n  return result\n}\n\nfunction AsciiTree({ value, withEmoji, isCompact }) {\n  return (\n    <pre style={{ lineHeight: '1.2' }}>\n      {renderTree(value, withEmoji, isCompact)}\n    </pre>\n  )\n}\n\nexport default AsciiTree\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Tree from './Tree'\nimport AsciiTree from './AsciiTree'\nimport './styles.css'\n\nfunction App() {\n  const [isEmoji, setIsEmoji] = React.useState(false)\n  const [isCompact, setIsCompact] = React.useState(false)\n  const [treeData, setTreeData] = React.useState([\n    {\n      title: 'root',\n      isDirectory: true,\n      expanded: true,\n    },\n  ])\n\n  return (\n    <div className=\"App\">\n      <h1>File tree generator</h1>\n      <p className=\"description\">\n        Inspired by <code>tree</code>.\n      </p>\n      <h2>Structure</h2>\n      <Tree value={treeData} onChange={setTreeData} />\n      <h2>Result</h2>\n      <label className=\"option\">\n        <input\n          type=\"checkbox\"\n          checked={isEmoji}\n          onChange={e => setIsEmoji(e.target.checked)}\n        />\n        Emoji\n      </label>\n      <label className=\"option\">\n        <input\n          type=\"checkbox\"\n          checked={isCompact}\n          onChange={e => setIsCompact(e.target.checked)}\n        />\n        Compact\n      </label>\n      <AsciiTree value={treeData} withEmoji={isEmoji} isCompact={isCompact} />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}